import{Color}from"./colors.js";import{rotate,translate,scale,rotateAboutPoint,slerpPoints,lerp}from"./math.js";class Canvas{constructor(c,d,a){this.canvasEl=c,this.ctx=d,this._origin=a}map(a){return this._origin=a(this._origin),this}translate(b,c){return this._origin=translate(this._origin,b,c),this}scale(a){return this._origin=scale(this._origin,a),this}rotate(b,c=!1){return this._origin=rotate(this._origin,b,c),this}rotateAboutPoint(d,e,a,b=!1){return this._origin=rotateAboutPoint(this._origin,d,e,a,b),this}clear(){this.ctx.clearRect(0,0,this.width,this.height)}get origin(){return this._origin}set origin(a){this._origin=a}get originX(){return this._origin[0]}set originX(a){this._origin[0]=a}get originY(){return this._origin[1]}set originY(a){this._origin[1]=a}get width(){return this.canvasEl.width}set width(a){this.canvasEl.width=a}get height(){return this.canvasEl.height}set height(a){this.canvasEl.height=a}}class Shape{constructor(f,g,a,b,c,d){this._points=f,this._color=null==g?"black":g,this._lineWidth=null==a?1:a,this._fillColor=b,this._shadowColor=c,this._shadowBlur=d}map(c){return this._points.map((d,a)=>c(d,a)),this}translate(c,d){return this._points.map(a=>translate(a,c,d)),this}scale(b){return this._points.map(c=>scale(c,b)),this}rotate(c,d=!1){return this._points.map(a=>rotate(a,c,d)),this}rotateAboutPoint(e,f,a,b=!1){return this._points.map(c=>{rotateAboutPoint(c,e,f,a,b)}),this}get points(){return this._points}set points(a){this._points=a}get centroid(){let c=0,d=0;for(let[e,a]of this._points)c+=e,d+=a;return c/=this._points.length,d/=this._points.length,[c,d]}get color(){return this._color}set color(a){this._color=a instanceof Color?a.colorString:a}get lineWidth(){return this._lineWidth}set lineWidth(a){this._lineWidth=a}get fillColor(){return this._fillColor}set fillColor(a){this._fillColor=a}get shadowColor(){return this._shadowColor}set shadowColor(a){this._shadowColor=a}get shadowBlur(){return this._shadowBlur}set shadowBlur(a){this._shadowBlur=a}}class Polygon extends Shape{constructor(d,e,a,b){super(d,e,a,b)}draw(c){let d=0,e=0;if(c instanceof Canvas){let b=c;c=b.ctx,d=b.originX,e=b.originY}c.beginPath(),c.strokeStyle=this._color,c.lineWidth=this._lineWidth,this._fillColor&&(c.fillStyle=this._fillColor),c.shadowColor=this._shadowColor?this._shadowColor:"black",c.shadowBlur=this._shadowBlur?this._shadowBlur:0;for(let[f,a]of this._points)c.lineTo(f+d,e+a);return this._fillColor?c.fill():c.stroke(),this}}class Arc extends Shape{constructor(g,h,a,b,c,d,e){super([[g,h]],d,e),this._radius=a,this._beginAngle=b,this._endAngle=c}draw(b){let c=0,d=0;if(b instanceof Canvas){let e=b;b=e.ctx,c=e.originX,d=e.originY}return b.beginPath(),b.strokeStyle=this._color,b.lineWidth=this._lineWidth,this._fillColor&&(b.fillStyle=this._fillColor),b.shadowColor=this._shadowColor?this._shadowColor:"black",b.shadowBlur=this._shadowBlur?this._shadowBlur:0,b.arc(this.points[0][0]+c,this.points[0][1]+d,this._radius,this._beginAngle,this._endAngle),this._fillColor?b.fill():b.stroke(),this}get radius(){return this._radius}set radius(a){this._radius=a}get beginAngle(){return this._beginAngle}set beginAngle(a){this._beginAngle=a}get endAngle(){return this._endAngle}set endAngle(a){this._endAngle=a}}class Rectangle extends Polygon{constructor(e,f,a,b,c){super([[e,f],[e+a,f],[e+a,f+b],[e,f+b]],void 0,void 0,c),this._width=a,this._height=b,this.leftX=e,this.leftY=f}get height(){return this._height}set height(a){this._points[2][1]=a,this._points[3][1]=a,this._height=a}get width(){return this._width}set width(a){this._points[1][0]=a,this._points[2][0]=a,this._width=a}}class Mesh{constructor(...a){this.shapes=a}add(a){return this.shapes.push(a),this}draw(c,d){for(let a of this.shapes)a.draw(c,d);return this}map(c){let d=0;for(let a of this.shapes)c(a,d++);return this}translate(c,d){for(let a of this.shapes)a.translate(c,d);return this}scale(b){for(let c of this.shapes)c.scale(b);return this}rotate(c,d=!1){for(let a of this.shapes)a.rotate(c,d);return this}rotateAboutPoint(e,f,a,b=!1){for(let c of this.shapes)c.rotateAboutPoint(e,f,a,b);return this}}function roundedArc(q,w,a,x,y,b,c){var d=Math.sin,z=Math.cos;let h=-0,i=a+c/2,e=.05,f=c,j=[[0,e],[f,e]],g=slerpPoints(j[0],j[1]),k=[...g],l=x,A=2*e/a;l+=A;let m=new Polygon(k,null,null,b),o=new Arc(q,w,a,l+-0,0,b,c),p=new Polygon(JSON.parse(JSON.stringify(k)),null,null,b);m.translate(q,w),p.translate(q,w);let r=i*z(l),s=i*d(l);m.scale(-1).rotate(l,!0).translate(r,s);let t=new Mesh(p,o,m);return t.draw=function(c,e){let a=lerp(e,x,y-2*A),j=a;a>=x-A+h?a>=y-A?(j=y-A+h,a=y-A):(j=a+A+h,a+=A):j=a;let k=i*z(j),l=i*d(j);return this.shapes[0].translate(-f,0).rotate(j,!0).translate(k,l).draw(c).translate(-k,-l).rotate(-j,!0).translate(f,0),this.shapes[1].endAngle=a,this.shapes[1].draw(c),this.shapes[2].draw(c),this},t}function setRoundedArcColor(a,c){a.map(a=>{a instanceof Arc?a.color=c:a.fillColor=c})}function roundedRectangle(c,s,t,a,b){var d=Math.abs;let u=-.3,e=d((s-a)/2),f=[[c,s],[c,s-a]],g=[[c+t,s],[c+t,s-a]];t-=2*e;let h=slerpPoints(f[0],f[1],1),i=slerpPoints(g[1],g[0],-1),j=new Polygon(h,null,null,b),k=new Rectangle(c,s,t,a,b),l=new Polygon(i,null,null,b),m=-t/2,n=a/2;j.translate(m-u,n),l.translate(m-2*e,n),k.translate(m,-n);let o=new Mesh(j,k,l),[p,q]=k.centroid;return o.draw=function(i,b){let g=b*t,[c,d]=k.centroid,e=c-p-k.width/2,f=d-q-k.height/2;k.translate(-e,-f),k.width=g,k.translate(e,f),b=-(1-b)*t+u,l.translate(b,0);for(let a of this.shapes)a.draw(i);return l.translate(-b,0),this},o}function generateGradient(c,e,a,d,f,g){a=null==a?0:a,d=null==d?0:d,f=null==f?c.width:f,g=null==g?0:g;let h=c.getContext("2d"),i=h.createLinearGradient(a,d,f,g);for(let[b,h]of e)i.addColorStop(b,h);return i}function progressBarIntervals(i,j,a,b,c){let k=[],l=0,m=a/c.length-b/c.length,n=0;for(let f of c){let c=m+b,d=roundedRectangle(i,j,c,b,f);d.translate(-a/2+c/2+l,0),k.push(d),l+=m,n+=1}let d=new Mesh(...k);return d.draw=function(c,e){let a=this.shapes.length,f=1/a,g=e,h=0;for(let a of this.shapes)if(0<g)h=0<g-f?1:g/f,a.draw(c,h),g-=f;else break;return this},d}export{Canvas,progressBarIntervals,roundedArc,roundedRectangle,setRoundedArcColor,generateGradient,Mesh,Rectangle,Arc,Polygon,Shape};