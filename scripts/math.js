export function translate(a,b,c){return a[0]+=b,a[1]+=c,a}export function scale(a,b){return a[0]*=b,a[1]*=b,a}export function rotate(a,b,c=!1){var d=Math.sin,e=Math.cos,f=Math.PI;c||(b*=f/180);let g=a[0],h=a[1];return a[0]=g*e(b)-h*d(b),a[1]=g*d(b)+h*e(b),a}export function rotateAboutPoint(a,b,c,d,e=!1){return a=translate(a,-b,-c),a=rotate(a,d,e),a=translate(a,b,c),a}export function distance(a,b,c){var d=Math.sqrt,e=Math.pow;return void 0===c&&(c=function(a,b){let c=0;return a.forEach(function(a,d){c+=e(a-b[d],2)}),d(c)}),c(a,b)}export function dot(a,b){let c=0;return a.forEach(function(a,d){c+=a*b[d]}),c}export function mag(a){var b=Math.sqrt,c=Math.pow;let d=0;return a.forEach(a=>{d+=c(a,2)}),b(d)}export function angle(a,b){let c=mag(a)*mag(b),e=dot(a,b);return Math.acos(e/c)}export function slerpPoints(a,b,c=1){var d=Math.abs,e=Math.min,f=Math.sin,g=Math.cos;let h,i=e(a[0],b[0]),j=e(a[1],b[1]),k=[d(b[0]-a[0])/2+i,d(b[1]-a[1])/2+j],l=distance(k,b);h=a[1]>b[1]?[-1,0]:[1,0];let m=[a[0]-k[0],a[1]-k[1]],n=[b[0]-k[0],b[1]-k[1]],o=2*Math.PI-angle(h,m),p=angle(h,n);if(1===c){let a=o;o=p,p=a}let q=[];for(let d,e=0;1>=e;e+=.1)d=lerp(e,o,p),q.push([c*l*g(d)+k[0],l*f(d)+k[1]]);return q}export function clamp(a,b,c){if(a<b)return b;return a>c?c:a}export function normalize(a,b,c){return(a-b)/(c-b)}export function DeCasteljau(a,b){const c=new Map,d=function(a,b,e,f,g){let h=`${g}${e}${f}`;if(c.has(h))return c.get(h);let i,j;1==g?(i=b[e],j=b[f]):(g--,i=d(a,b,e,f,g),j=d(a,b,f,f+1,g));let k=(1-a)*i+a*j;return c.set(h,k),k};return d(a,b,0,1,b.length-1)}export function cubicBezier(a,b,c,d,e){return[DeCasteljau(a,[0,b,d,1]),DeCasteljau(a,[0,c,e,1])]}export function easeInBounce(a,b,c,d){return a=cubicBezier(a/d,.09,.91,.5,1.5)[1],c*a+b}export function bounceInEase(a,b,c,d){return a=cubicBezier(a/d,.19,-.53,.83,.67)[1],c*a+b}export function easeInQuad(a,b,c,d){return c*(a/=d)*a+b}export function easeOutQuad(a,b,c,d){return-c*(a/=d)*(a-2)+b}export function easeInOutQuad(a,b,c,d){return 1>(a/=d/2)?c/2*a*a+b:-c/2*(--a*(a-2)-1)+b}export function easeInCubic(a,b,c,d){return c*(a/=d)*a*a+b}export function easeOutCubic(a,b,c,d){return c*((a=a/d-1)*a*a+1)+b}export function easeInOutCubic(a,b,c,d){return 1>(a/=d/2)?c/2*a*a*a+b:c/2*((a-=2)*a*a+2)+b}export function smoothStep3(a,b,c,d){var e=Math.pow;return a/=d,c*e(a,2)*(3-2*a)+b}export function lerpIn(a,b,c,d){return c*(a/=d)+b}export function lerp(a,b,c){return(1-a)*b+a*c}export function logerp(a,b,c){b=0===b?1e-9:b;let d=b*Math.pow(c/b,a);return d}export function interpBezier(a,b){let c=b.map(a=>a[0]),d=b.map(a=>a[1]);return[DeCasteljau(a,c),DeCasteljau(a,d)]}export function bounceInEaseHalf(a,b,c,d){return a=interpBezier(a/d,[[0,0],[.026,1.746],[.633,1.06],[1,0]])[1],c*a+b}export function round(a,b,c=0){var d=Math.floor,e=Math.ceil,f=Math.round,g=Math.pow;let h=g(10,b),i=0;return 0===c?i=f(a*h):1===c?i=e(a*h):2===c&&(i=d(a*h)),i/h}