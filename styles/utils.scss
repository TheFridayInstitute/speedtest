@mixin attr-x(
    $attr,
    $attr-count: 10,
    $attr-steps: 10,
    $unit: "%",
    $attr-abrv: null
) {
    $attr-list: null;

    @if not $attr-abrv {
        $attr-abrv: $attr;
    }

    @for $i from 1 through $attr-count {
        $attr-value: $attr-steps * $i;

        .#{$attr-abrv}-#{$attr-value} {
            #{$attr}: #{$attr-value}#{$unit};
        }

        $attr-list: append(
            $attr-list,
            unquote(".#{$attr}-#{$attr-value}"),
            comma
        );
    }

    #{$attr-list} {
        //append style to all classes
    }
}

@include attr-x("max-height", 4, 25, "vh", "mvh");
@include attr-x("max-width", 4, 25, "vw", "mvw");

.box-shadow {
    border-radius: var(--border-radius-primary);
    box-shadow: 4px 0px 20px 0px rgba(0, 0, 0, 0.5);
}

.justify-content-space-evenly {
    justify-content: space-evenly;
}

.justify-items-center {
    justify-items: center;
}

.square-box {
    height: 0%;
    padding-bottom: 100%;
    position: relative;
    width: 100%;

    * {
        height: 100%;
        width: 100%;
        position: absolute;
    }
}

.start-color {
    // background-color: var(--color-secondary);
    background-color: white;
    border-radius: 0.25em;
    color: rgb(0, 0, 0);
    padding: 0.1rem 1rem;
    margin: 0.1rem;
    display: inline-flex;
}

.ul-color {
    color: var(--ul-color-1);
}

.start-btn {
    border: none;
    align-items: center;
    // background-color: var(--color-secondary);

    background-image: linear-gradient(to right, var(--ul-color-1), var(--dl-color-1));
    border-radius: var(--border-radius-primary);
    color: black;
    cursor: pointer;
    display: flex;
    font-size: 2em;
    font-weight: normal;
    height: 2em;
    justify-content: center;
    position: relative;

    width: 10em;

    &.running {
        background-color: var(--dl-color-2);
    }

    &:hover {
    }
}

.btn-prime {
    position: relative;
    overflow: hidden;
    --border-size: 0.2rem;

    --box-shadow-hl: 2px;
    --box-shadow-vl: 0px;
    --box-shadow-br: 10px;
    --box-shadow-sr: 0px;

    --box-shadow-color: rgba(0, 0, 0, 0.5);

    transition: all cubic-bezier(0.09, 0.91, 0.5, 1.1) 500ms;

    box-shadow: var(--box-shadow-hl) var(--box-shadow-vl) var(--box-shadow-br)
        var(--box-shadow-sr) var(--box-shadow-color);

    // &:hover {
    //     --box-shadow-vl: 7px;

    //     transform: translateY(-5px);

    //     box-shadow: var(--box-shadow-hl) var(--box-shadow-vl)
    //         var(--box-shadow-br) var(--box-shadow-sr) var(--box-shadow-color);
    // }
}

.ripple {
    border-radius: 100%;
    background-color: rgba(255, 255, 255, 0.5);
    width: 0;
    height: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
}
