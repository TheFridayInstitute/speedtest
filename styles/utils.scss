@function ipow($n, $exp) {
    $value: 1;
    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $n;
        }
    } @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $n;
        }
    }
    @return $value;
}

@function factorial($n) {
    $value: 1;
    @if $n > 0 {
        @for $i from 1 through $n {
            $value: $value * $i;
        }
    }
    @return $value;
}

@function rad($theta) {
    $unit: unit($theta);
    $unitless: $theta / ($theta * 0 + 1);
    @if $unit == deg {
        $unitless: $unitless / 180 * $PI;
    }
    @return $unitless;
}

@function sin($theta) {
    $sin: 0;
    $theta: rad($theta);
    @for $i from 0 through 10 {
        $sin: $sin +
            ipow(-1, $i) *
            ipow($theta, (2 * $i + 1)) /
            factorial(2 * $i + 1);
    }
    @return $sin;
}

@function cos($theta) {
    @return sin($PI/2 - $theta);
}

@mixin attr-x(
    $attr,
    $attr-count: 10,
    $attr-steps: 10,
    $unit: "%",
    $attr-abrv: null
) {
    $attr-list: null;

    @if not $attr-abrv {
        $attr-abrv: $attr;
    }

    @for $i from 1 through $attr-count {
        $attr-value: $attr-steps * $i;

        $attr-list: append(
            $attr-list,
            unquote(".#{$attr}-#{$attr-value}"),
            comma
        );

        .#{$attr-abrv}-#{$attr-value} {
            #{$attr}: #{$attr-value}#{$unit};
        }
    }

    #{$attr-list} {
        //append style to all classes
    }
}

@mixin space-between-column($gap) {
    margin-bottom: $gap;
    margin-top: $gap;
    &:nth-child(1) {
        margin-top: 0;
    }
    &:nth-child(n) {
        margin-bottom: 0;
    }
}

@mixin space-between-row($gap) {
    margin-left: $gap;
    margin-right: $gap;
    &:nth-child(1) {
        margin-left: 0;
    }
    &:nth-child(n) {
        margin-right: 0;
    }
}

@include attr-x("max-height", 4, 25, "vh", "mvh");
@include attr-x("max-width", 4, 25, "vw", "mvw");

.box-shadow {
    border-radius: var(--border-radius-primary);
    box-shadow: 5px 0px 20px 0px rgba(0, 0, 0, 0.2);
}

.justify-content-space-evenly {
    justify-content: space-evenly;
}

.justify-items-center {
    justify-items: center;
}

.square-box {
    position: relative;
    height: 0%;
    width: 100%;
    padding-bottom: 100%;

    * {
        position: absolute;
        height: 100%;
        width: 100%;
    }
}

.start-btn {
    display: flex;
    position: relative;
    align-items: center;
    // background-color: var(--color-secondary);
    border: none;
    // border-radius: var(--border-radius-primary);
    // color: black;
    cursor: pointer;
    // font-family: var(--font-family-primary);
    font-size: 1.5rem;
    // font-weight: normal;
    justify-content: center;

    &.running {
        background-color: var(--dl-color-2);
    }

    &:hover {
    }
}

.btn-prime {
    --border-size: 0.2rem;

    --box-shadow-hl: 2px;
    --box-shadow-vl: 0px;
    --box-shadow-br: 10px;
    --box-shadow-sr: 0px;

    // TODO: Box shadow changes.
    --box-shadow-color: rgba(0, 0, 0, 0);
    position: relative;
    background-image: none;
    overflow: hidden;
    border: none;

    box-shadow: var(--box-shadow-hl) var(--box-shadow-vl) var(--box-shadow-br)
        var(--box-shadow-sr) var(--box-shadow-color);
    outline: 0;
    transition: all cubic-bezier(0.09, 0.91, 0.5, 1.1) 500ms;
    cursor: pointer;

    &:hover {
        --box-shadow-vl: 7px;

        transform: translateY(-5px);

        box-shadow: var(--box-shadow-hl) var(--box-shadow-vl)
            var(--box-shadow-br) var(--box-shadow-sr) var(--box-shadow-color);
    }
}

.ripple {
    position: absolute;
    margin: auto;

    height: 0;
    width: 0;
    right: 0;
    left: 0;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 100%;

    box-sizing: border-box;
    opacity: 0;

    transform-origin: center;
}

.modal {
    display: flex;
    position: absolute;
    width: 100%;

    transform: translateY(-100%);
    align-items: center;
    background-color: rgba(0, 0, 0, 0.75);
    justify-content: center;
    min-height: 100%;

    transition: all ease-out 250ms;
    visibility: hidden;

    z-index: 999;

    &.visible {
        transform: translateY(0);
        visibility: visible;
    }
}

@import url("https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Fraunces:ital,opsz,wght@0,9..144,100..900;1,9..144,100..900&display=swap");

:root {
    --ppmycota-primary: 248, 88%, 71%;
}

.preserve-3d {
    transform-style: preserve-3d;
}

.fraunces {
    font-family: "Fraunces", sans-serif;
}

.fira-code {
    font-family: "Fira Code", monospace;
}

.rainbow-border {
    border: solid 5px transparent;
    border-radius: 50px;
    background:
        linear-gradient(currentColor, currentColor) padding-box,
        linear-gradient(
                to right,
                #ff2400,
                #e81d1d,
                #e8b71d,
                #e3e81d,
                #1de840,
                #1ddde8,
                #2b1de8,
                #dd00f3,
                #dd00f3
            )
            border-box;
}

.container-inline-size {
    container-type: inline-size;
}

.scrollbar-hidden {
    scrollbar-width: none;
    -ms-overflow-style: none;
    &::-webkit-scrollbar {
        display: none;
    }
}

.depth-text {
    position: relative;
    display: inline-block;

    --color-primary: hsla(var(--primary), 1);
    --color-shadow: hsla(var(--shadow), 1);

    color: var(--color-primary);

    text-shadow:
        1px 1px 0 var(--color-shadow),
        2px 2px 0 var(--color-shadow),
        3px 3px 0 var(--color-shadow),
        4px 4px 0 var(--color-shadow),
        5px 5px 0 var(--color-shadow),
        5px 5px 1px rgba(0, 0, 0, 0.1),
        1px 1px 3px rgba(0, 0, 0, 0.1),
        2px 2px 2px rgba(0, 0, 0, 0.2),
        3px 3px 3px rgba(0, 0, 0, 0.2),
        4px 4px 5px rgba(0, 0, 0, 0.25),
        5px 5px 6px rgba(0, 0, 0, 0.2),
        6px 6px 10px rgba(0, 0, 0, 0.15);
}

.icon {
    --size: 1rem font-size: --size;
    width: --size;
    aspect-ratio: 1/1;
}

.rainbow-text {
    background-image: linear-gradient(
        to right,
        #f00 0%,
        #ff0 17%,
        #0f0 33%,
        #0ff 50%,
        #00f 67%,
        #f0f 83%,
        #f00 100%
    ) !important;
    background-clip: text;
    color: transparent;
}

.disabled {
    opacity: 0.5;
    pointer-events: none;
}

.rainbow-wrapper {
    height: 100%;
    width: 100%;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;

    position: absolute;
}

.rainbow-wrapper:before {
    content: "";
    height: 100%;
    width: 100%;

    left: 0;
    right: 0;

    top: 0;
    bottom: 0;
    position: absolute;
    background-color: none;

    background: linear-gradient(
        124deg,
        #ff2400,
        #e81d1d,
        #e8b71d,
        #e3e81d,
        #1de840,
        #1ddde8,
        #2b1de8,
        #dd00f3,
        #dd00f3
    );

    background-size: 800% 800%;
    opacity: 0.75;
    z-index: 1;

    animation: rainbow 5s ease infinite;
}

@keyframes rainbow {
    0% {
        background-position: 0% 82%;
    }
    50% {
        background-position: 100% 19%;
    }
    100% {
        background-position: 0% 82%;
    }
}
