@function ipow($n, $exp) {
    $value: 1;
    @if $exp > 0 {
        @for $i from 1 through $exp {
            $value: $value * $n;
        }
    } @else if $exp < 0 {
        @for $i from 1 through -$exp {
            $value: $value / $n;
        }
    }
    @return $value;
}

@function factorial($n) {
    $value: 1;
    @if $n > 0 {
        @for $i from 1 through $n {
            $value: $value * $i;
        }
    }
    @return $value;
}

@function rad($theta) {
    $unit: unit($theta);
    $unitless: $theta / ($theta * 0 + 1);
    @if $unit == deg {
        $unitless: $unitless / 180 * $PI;
    }
    @return $unitless;
}

@function sin($theta) {
    $sin: 0;
    $theta: rad($theta);
    @for $i from 0 through 10 {
        $sin: $sin + ipow(-1, $i) * ipow($theta, (2 * $i + 1)) / factorial(2 * $i + 1);
    }
    @return $sin;
}

@function cos($theta) {
    @return sin($PI/2 - $theta);
}

@mixin attr-x($attr, $attr-count: 10, $attr-steps: 10, $unit: "%", $attr-abrv: null) {
    $attr-list: null;

    @if not $attr-abrv {
        $attr-abrv: $attr;
    }

    @for $i from 1 through $attr-count {
        $attr-value: $attr-steps * $i;

        .#{$attr-abrv}-#{$attr-value} {
            #{$attr}: #{$attr-value}#{$unit};
        }

        $attr-list: append($attr-list, unquote(".#{$attr}-#{$attr-value}"), comma);
    }

    #{$attr-list} {
        //append style to all classes
    }
}

@mixin space-between-column($gap) {
    margin-top: $gap;
    margin-bottom: $gap;
    &:nth-child(1) {
        margin-top: 0;
    }
    &:nth-child(n) {
        margin-bottom: 0;
    }
}

@mixin space-between-row($gap) {
    margin-left: $gap;
    margin-right: $gap;
    &:nth-child(1) {
        margin-left: 0;
    }
    &:nth-child(n) {
        margin-right: 0;
    }
}

@include attr-x("max-height", 4, 25, "vh", "mvh");
@include attr-x("max-width", 4, 25, "vw", "mvw");

.box-shadow {
    border-radius: var(--border-radius-primary);
    box-shadow: 5px 0px 20px 0px rgba(0, 0, 0, 0.2);
}

.justify-content-space-evenly {
    justify-content: space-evenly;
}

.justify-items-center {
    justify-items: center;
}

.square-box {
    height: 0%;
    padding-bottom: 100%;
    position: relative;
    width: 100%;

    * {
        height: 100%;
        width: 100%;
        position: absolute;
    }
}

.start-btn {
    align-items: center;
    background-color: var(--color-secondary);
    position: relative;
    border-radius: var(--border-radius-primary);
    color: black;
    cursor: pointer;
    display: flex;
    font-size: 1.5rem;
    font-weight: normal;
    justify-content: center;
    border: none;
    font-family: var(--font-family-primary);

    &.running {
        background-color: var(--dl-color-2);
    }

    &:hover {
    }
}

.btn-prime {
    overflow: hidden;
    border: none;
    background-image: none;
    outline: 0;
    position: relative;

    --border-size: 0.2rem;

    --box-shadow-hl: 2px;
    --box-shadow-vl: 0px;
    --box-shadow-br: 10px;
    --box-shadow-sr: 0px;

    // TODO: Box shadow changes.
    --box-shadow-color: rgba(0, 0, 0, 0);
    transition: all cubic-bezier(0.09, 0.91, 0.5, 1.1) 500ms;

    box-shadow: var(--box-shadow-hl) var(--box-shadow-vl) var(--box-shadow-br)
        var(--box-shadow-sr) var(--box-shadow-color);

    &:hover {
        --box-shadow-vl: 7px;

        transform: translateY(-5px);

        box-shadow: var(--box-shadow-hl) var(--box-shadow-vl) var(--box-shadow-br)
            var(--box-shadow-sr) var(--box-shadow-color);
    }
}

.ripple {
    border-radius: 100%;
    background-color: rgba(255, 255, 255, 0.5);
    width: 0;
    height: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
}

.modal {
    display: flex;
    position: absolute;
    width: 100%;

    transform: translateY(-100%);
    align-items: center;
    background-color: rgba(0, 0, 0, 0.75);
    justify-content: center;
    min-height: 100%;

    transition: all ease-out 250ms;
    visibility: hidden;

    z-index: 999;

    &.visible {
        transform: translateY(0);
        visibility: visible;
    }
}

.hidden {
    pointer-events: none;
    visibility: hidden;
}
